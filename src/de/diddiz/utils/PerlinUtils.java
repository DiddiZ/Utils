package de.diddiz.utils;

public class PerlinUtils
{

	public final static float[] perlinThresholds = new float[]{-1, -0.5648552f, -0.533955f, -0.5146436f, -0.5006875f, -0.49069342f, -0.48240888f, -0.4754084f, -0.4693424f, -0.4644087f, -0.4598503f, -0.45553714f, -0.45144132f, -0.44747692f, -0.44366992f, -0.44000107f, -0.43649775f, -0.4331286f, -0.4298766f, -0.4267248f, -0.42363486f, -0.4206106f, -0.41764453f, -0.41473585f, -0.41185376f, -0.40913635f, -0.406416f, -0.40375376f, -0.40117502f, -0.39867735f, -0.3962428f, -0.3938702f, -0.39149487f, -0.3892187f, -0.3870201f, -0.3849154f, -0.38282934f, -0.38086653f, -0.37888893f, -0.37690413f, -0.37496573f, -0.37297323f, -0.3710245f, -0.3691502f, -0.36731154f, -0.36550853f, -0.36368558f, -0.36191088f, -0.36012405f, -0.3584082f, -0.35667464f, -0.35492843f, -0.35324237f, -0.35155526f, -0.34986654f, -0.34819078f, -0.3465647f, -0.34490806f, -0.34324044f, -0.34160912f, -0.3400771f, -0.33848923f, -0.33689287f, -0.33527684f, -0.33371004f, -0.33212104f, -0.33055174f, -0.32900196f, -0.32751822f, -0.3259743f, -0.32444045f, -0.32297528f, -0.32148314f, -0.31995496f, -0.31850055f, -0.3169759f, -0.31548572f, -0.31396952f, -0.31252185f, -0.3110152f, -0.3095407f, -0.3081098f, -0.30669555f, -0.3052862f, -0.3038353f, -0.3024156f, -0.30102986f, -0.2996027f, -0.29820764f, -0.29683986f, -0.29550213f, -0.29412246f, -0.2927814f, -0.2914539f, -0.29011047f, -0.28875607f, -0.28746402f, -0.28613114f, -0.28479624f, -0.2834571f, -0.28216505f, -0.28087986f, -0.27958542f, -0.2782807f, -0.27699634f, -0.27572173f, -0.27446315f, -0.27321523f, -0.27194571f, -0.27068704f, -0.2694144f, -0.26819623f, -0.26697496f, -0.26574627f, -0.2645781f, -0.26337916f, -0.26222417f, -0.26106238f, -0.25992155f, -0.2588299f, -0.25772578f, -0.25664043f, -0.25553763f, -0.2543968f, -0.25325853f, -0.25218153f, -0.2510899f, -0.25003323f, -0.24899697f, -0.24788472f, -0.24680221f, -0.24575809f, -0.24469754f, -0.24363941f, -0.24257532f, -0.2415311f, -0.24048781f, -0.23947395f, -0.23845354f, -0.23743156f, -0.23642755f, -0.23541164f, -0.23440373f, -0.23341367f, -0.2324131f, -0.23140329f, -0.23035698f, -0.22934115f, -0.22836661f, -0.22737634f, -0.2263867f, -0.22537732f, -0.22438163f, -0.2233865f, -0.22242568f, -0.22142418f, -0.22045493f, -0.21949774f, -0.21853939f, -0.21757248f, -0.2165888f, -0.21557407f, -0.21461979f, -0.21365207f, -0.2126882f, -0.21170835f, -0.21075189f, -0.20979752f, -0.20883521f, -0.20788386f, -0.20692013f, -0.20596558f, -0.20500737f, -0.20405316f, -0.20310628f, -0.20217533f, -0.20123339f, -0.20030132f, -0.1993398f, -0.19840282f, -0.1974796f, -0.19655633f, -0.19563581f, -0.19470528f, -0.19378245f, -0.19285738f, -0.19194767f, -0.19099876f, -0.19008863f, -0.18916702f, -0.18824473f, -0.18733294f, -0.18641686f, -0.18549164f, -0.18460888f, -0.18371147f, -0.18282863f, -0.18195966f, -0.18106958f, -0.18015528f, -0.17927675f, -0.17840564f, -0.1775474f, -0.1766746f, -0.17583348f, -0.17495453f, -0.17410707f, -0.17326987f, -0.17242852f, -0.17157164f, -0.17073554f, -0.16990206f, -0.16905403f, -0.16822436f, -0.16740908f, -0.16660231f, -0.16577558f, -0.16498369f, -0.16417724f, -0.16337912f, -0.1625764f, -0.16178042f, -0.1609806f, -0.16018108f, -0.1593928f, -0.15859494f, -0.15778822f, -0.1570074f, -0.15619549f, -0.15541391f, -0.15463138f, -0.15384467f, -0.15305637f, -0.1522688f, -0.1515088f, -0.15074581f, -0.14999503f, -0.14920992f, -0.1484546f, -0.14770538f, -0.14694512f, -0.1461936f, -0.14543173f, -0.14468369f, -0.1439662f, -0.14322847f, -0.14249986f, -0.14178121f, -0.14107493f, -0.1403645f, -0.13963895f, -0.1389523f, -0.13825043f, -0.13756967f, -0.13685471f, -0.13615718f, -0.13547707f, -0.134794f, -0.13413438f, -0.13345915f, -0.13280085f, -0.13211432f, -0.13146234f, -0.13079989f, -0.13014925f, -0.1294576f, -0.12880364f, -0.12814076f, -0.12747574f, -0.12681456f, -0.12615247f, -0.12550536f, -0.12484735f, -0.12419185f, -0.12355977f, -0.12290168f, -0.122259304f, -0.12164569f, -0.12105237f, -0.12044936f, -0.119865745f, -0.11926772f, -0.118644014f, -0.118031144f, -0.11742234f, -0.11681984f, -0.116205335f, -0.11561161f, -0.115051925f, -0.114458025f, -0.11387831f, -0.11328889f, -0.112701535f, -0.112104f, -0.11150801f, -0.11093515f, -0.110356264f, -0.109770894f, -0.109178185f, -0.10861539f, -0.10805786f, -0.10749467f, -0.10693048f, -0.10634564f, -0.10577123f, -0.10518387f, -0.10461375f, -0.104052246f, -0.10347226f, -0.102908105f, -0.10232111f, -0.10173693f, -0.10118157f, -0.1006231f, -0.100060165f, -0.09949313f, -0.09893644f, -0.09838927f, -0.09783411f, -0.09726557f, -0.09673047f, -0.096183956f, -0.095668346f, -0.095145166f, -0.094595015f, -0.09406517f, -0.0935145f, -0.09297481f, -0.09244564f, -0.09189281f, -0.09133544f, -0.09078718f, -0.09023482f, -0.08969829f, -0.089179814f, -0.08863069f, -0.088079184f, -0.087533414f, -0.08698088f, -0.086439386f, -0.085900605f, -0.0853688f, -0.0848241f, -0.08427441f, -0.08373642f, -0.083195254f, -0.08266945f, -0.08213693f, -0.0815807f, -0.081038386f, -0.08051205f, -0.07998106f, -0.07943992f, -0.078891754f, -0.078335285f, -0.07777828f, -0.07723431f, -0.07669709f, -0.076132365f, -0.075603366f, -0.075053245f, -0.07452017f, -0.073992796f, -0.07344581f, -0.07291636f, -0.072395116f, -0.0719004f, -0.07138127f, -0.070872396f, -0.07035041f, -0.069824636f, -0.06929663f, -0.068739146f, -0.06818324f, -0.067644835f, -0.06713009f, -0.06660071f, -0.06605445f, -0.06551367f, -0.06494236f, -0.064410955f, -0.063868344f, -0.063336976f, -0.0627985f, -0.062246457f, -0.06170059f, -0.061146658f, -0.060622312f, -0.060108103f, -0.059547678f, -0.059003234f, -0.05845979f, -0.05791408f, -0.05738753f, -0.056838155f, -0.05629459f, -0.055742893f, -0.055176318f, -0.054638475f, -0.054079287f, -0.053533673f, -0.052981645f, -0.052435815f, -0.051885664f, -0.0513414f, -0.05077547f, -0.050219484f, -0.04966951f, -0.049100764f, -0.04855919f, -0.0480251f, -0.047468722f, -0.046908796f, -0.046355426f, -0.045794547f, -0.045228183f, -0.044678226f, -0.04412663f, -0.043560654f, -0.043004543f, -0.042452626f, -0.04188752f, -0.041327715f, -0.04075761f, -0.040179342f, -0.039619446f, -0.039072692f, -0.03850157f, -0.037956618f, -0.037411064f, -0.036861897f, -0.03630136f, -0.035734564f, -0.035161197f, -0.034611613f, -0.034033857f, -0.033470932f, -0.032896668f, -0.03232974f, -0.031750917f, -0.031180382f, -0.030595921f, -0.030015558f, -0.029429212f, -0.028854728f, -0.028279772f, -0.027703062f, -0.027139494f, -0.026587069f, -0.026021123f, -0.02544589f, -0.024887256f, -0.024307787f, -0.023727328f, -0.023179114f, -0.02260518f, -0.022034585f, -0.021459937f, -0.020889807f, -0.020309813f, -0.019741178f, -0.019153327f, -0.01859136f, -0.018015252f, -0.017447129f, -0.016884357f, -0.016304921f, -0.01572007f, -0.01515609f, -0.014589712f, -0.014001468f, -0.013430417f, -0.012866318f, -0.0122920275f, -0.011710584f, -0.011144309f, -0.010576367f, -0.010006972f, -0.009414777f, -0.008836247f, -0.00824067f, -0.0076503158f, -0.0070829964f, -0.006543542f, -0.0059785545f, -0.005425632f, -0.004846031f, -0.0042994022f, -0.0037413836f, -0.0031635743f, -0.0025901347f, -0.0020365566f, -0.0014744028f, -9.031296E-4f, -3.4155697E-4f, -0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 2.2500753E-4f, 7.7199936E-4f, 0.0013489053f, 0.0018956959f, 0.0024642646f, 0.0030309483f, 0.0035911202f, 0.0041720346f, 0.0047346056f, 0.005300343f, 0.00586769f, 0.006449312f, 0.0070149144f, 0.0075757224f, 0.008152515f, 0.008726329f, 0.009277806f, 0.009850934f, 0.010426039f, 0.011006907f, 0.011581004f, 0.012134194f, 0.012693547f, 0.013256947f, 0.01381455f, 0.014367908f, 0.014942221f, 0.015526146f, 0.016089767f, 0.016665816f, 0.017237496f, 0.017811343f, 0.018392205f, 0.018975258f, 0.01955071f, 0.020103425f, 0.020653196f, 0.02120784f, 0.021769702f, 0.022342205f, 0.02290982f, 0.023499923f, 0.024035513f, 0.024586039f, 0.0251548f, 0.025712267f, 0.026276708f, 0.026828326f, 0.027391195f, 0.027953621f, 0.028534055f, 0.029105574f, 0.029668782f, 0.030230023f, 0.030801356f, 0.031373113f, 0.031932667f, 0.032500684f, 0.03306997f, 0.033657044f, 0.034223855f, 0.034780808f, 0.035345048f, 0.035908043f, 0.036456883f, 0.037013575f, 0.03758055f, 0.038149886f, 0.03871405f, 0.0392569f, 0.039836187f, 0.04038757f, 0.040952377f, 0.041537464f, 0.04208865f, 0.04263529f, 0.04316312f, 0.043703705f, 0.04424846f, 0.044818304f, 0.045378592f, 0.045938484f, 0.046504974f, 0.047048897f, 0.047600746f, 0.048142523f, 0.04871457f, 0.04925941f, 0.049812794f, 0.05036084f, 0.05092269f, 0.051476136f, 0.05203089f, 0.052585647f, 0.053149108f, 0.05370442f, 0.05424297f, 0.054787546f, 0.055345416f, 0.055877626f, 0.056424767f, 0.056984782f, 0.057560384f, 0.05807978f, 0.058620036f, 0.059149757f, 0.05968226f, 0.060224935f, 0.06076604f, 0.06131637f, 0.061859325f, 0.062407434f, 0.06293625f, 0.063471556f, 0.06401533f, 0.06458914f, 0.06514506f, 0.06568381f, 0.06623641f, 0.066770375f, 0.06731126f, 0.06784041f, 0.06837615f, 0.068891376f, 0.06943931f, 0.06995982f, 0.07048145f, 0.07101452f, 0.07153672f, 0.07204445f, 0.07256317f, 0.073081985f, 0.07361695f, 0.07413459f, 0.07464986f, 0.075175226f, 0.07568988f, 0.07623024f, 0.07675519f, 0.077278495f, 0.07780652f, 0.07833535f, 0.078872815f, 0.079401344f, 0.0799324f, 0.08047496f, 0.081026345f, 0.08156115f, 0.082105845f, 0.08263415f, 0.083162636f, 0.083700314f, 0.08423196f, 0.084763765f, 0.08530241f, 0.08582839f, 0.086359695f, 0.086897716f, 0.087444276f, 0.087966695f, 0.08852411f, 0.089061916f, 0.08959894f, 0.09014809f, 0.09069015f, 0.09122458f, 0.09178526f, 0.09233132f, 0.09288004f, 0.09342936f, 0.09397328f, 0.0945302f, 0.09507283f, 0.09560594f, 0.096141964f, 0.09665278f, 0.09720647f, 0.09773333f, 0.09827096f, 0.098822445f, 0.09938949f, 0.099926636f, 0.10048031f, 0.10103446f, 0.10159942f, 0.102191225f, 0.10276294f, 0.10333574f, 0.10389292f, 0.104457915f, 0.10502136f, 0.105582416f, 0.106152356f, 0.10671422f, 0.10727825f, 0.10784579f, 0.1084026f, 0.10898985f, 0.109538384f, 0.110131346f, 0.11069623f, 0.11128926f, 0.111878335f, 0.11245316f, 0.11302688f, 0.11361024f, 0.11417858f, 0.11475754f, 0.11534095f, 0.11591029f, 0.11649424f, 0.117092445f, 0.11767286f, 0.11825633f, 0.11885822f, 0.11942965f, 0.12003845f, 0.12064156f, 0.12124264f, 0.12184526f, 0.12245226f, 0.12310794f, 0.12375221f, 0.12439545f, 0.12502357f, 0.125685f, 0.12633252f, 0.1269825f, 0.12762856f, 0.128282f, 0.12896058f, 0.12961663f, 0.13027766f, 0.13092563f, 0.13156381f, 0.13223426f, 0.13289255f, 0.13357152f, 0.13422912f, 0.13488397f, 0.13556474f, 0.13624191f, 0.13693467f, 0.13762069f, 0.13832532f, 0.13902992f, 0.13972986f, 0.14044309f, 0.14113587f, 0.14182746f, 0.1425656f, 0.1433047f, 0.14401215f, 0.14475432f, 0.14549235f, 0.14623761f, 0.14698881f, 0.14773208f, 0.14851138f, 0.14925593f, 0.15002182f, 0.15079534f, 0.15155768f, 0.1523298f, 0.1530962f, 0.15386248f, 0.15466344f, 0.15543401f, 0.15620452f, 0.15699944f, 0.15779915f, 0.15862069f, 0.15941566f, 0.16022202f, 0.16100816f, 0.16182265f, 0.16263789f, 0.16344723f, 0.16424537f, 0.16507313f, 0.16591111f, 0.16673222f, 0.16758555f, 0.16836385f, 0.16919929f, 0.17005014f, 0.17089781f, 0.17173831f, 0.17261569f, 0.17347792f, 0.17430712f, 0.17516437f, 0.1760416f, 0.17688006f, 0.17777179f, 0.17863761f, 0.17951609f, 0.1804014f, 0.1812759f, 0.18216401f, 0.18304683f, 0.18396339f, 0.18486577f, 0.18578406f, 0.1867072f, 0.18761715f, 0.18852276f, 0.1894559f, 0.19039118f, 0.19129458f, 0.19220996f, 0.19313648f, 0.19407755f, 0.19500905f, 0.19594496f, 0.19689661f, 0.19782494f, 0.1987789f, 0.1997032f, 0.20068905f, 0.20160112f, 0.20252956f, 0.2034803f, 0.2044188f, 0.2053821f, 0.20634104f, 0.20727672f, 0.2082023f, 0.20915768f, 0.21012823f, 0.21109745f, 0.21207382f, 0.21304294f, 0.21400312f, 0.21498646f, 0.21599585f, 0.21697961f, 0.21792953f, 0.21889363f, 0.21988729f, 0.22088915f, 0.22192094f, 0.22292207f, 0.22394615f, 0.22491941f, 0.22591841f, 0.22690146f, 0.22790289f, 0.22891404f, 0.22992283f, 0.23092166f, 0.23192017f, 0.23292461f, 0.23396519f, 0.23494002f, 0.23597479f, 0.23698372f, 0.23802552f, 0.23905694f, 0.24007025f, 0.24112315f, 0.24215047f, 0.24323006f, 0.24429771f, 0.2453627f, 0.24640946f, 0.24747247f, 0.24853009f, 0.24962807f, 0.25072414f, 0.25180075f, 0.2528629f, 0.25397462f, 0.2550966f, 0.2562251f, 0.25735402f, 0.25848767f, 0.25962368f, 0.2607752f, 0.26191813f, 0.26307562f, 0.26425415f, 0.26548076f, 0.266682f, 0.26793963f, 0.26919085f, 0.27043185f, 0.271676f, 0.2729655f, 0.27423555f, 0.2754587f, 0.27671847f, 0.27798188f, 0.27926788f, 0.28051758f, 0.28183064f, 0.28316838f, 0.28445494f, 0.28578776f, 0.28713194f, 0.28847963f, 0.28987366f, 0.29124317f, 0.29261234f, 0.29401505f, 0.29542118f, 0.2967854f, 0.29819f, 0.2996055f, 0.30106643f, 0.3025187f, 0.30400622f, 0.3054373f, 0.30688128f, 0.30837703f, 0.30985302f, 0.3113348f, 0.3129028f, 0.3144184f, 0.3158954f, 0.31742805f, 0.3189541f, 0.32050315f, 0.32202452f, 0.32355943f, 0.32511345f, 0.3266459f, 0.32826027f, 0.32981807f, 0.33134037f, 0.33293164f, 0.33447152f, 0.33599108f, 0.3375672f, 0.3391792f, 0.34086147f, 0.3424298f, 0.34402558f, 0.3456767f, 0.34733462f, 0.34899768f, 0.35066986f, 0.35239995f, 0.3540511f, 0.3557626f, 0.35748684f, 0.35923725f, 0.3610572f, 0.3628316f, 0.36469072f, 0.3665352f, 0.36831963f, 0.3701694f, 0.37213293f, 0.37400508f, 0.37594715f, 0.37795094f, 0.379965f, 0.3820273f, 0.38413143f, 0.38622808f, 0.38851914f, 0.39075273f, 0.39304072f, 0.3954476f, 0.39790928f, 0.4003632f, 0.40289003f, 0.40548006f, 0.4080319f, 0.41073456f, 0.4135037f, 0.4164019f, 0.41924664f, 0.42221907f, 0.4253369f, 0.4284453f, 0.43156534f, 0.4347763f, 0.43812266f, 0.4415682f, 0.44512093f, 0.44893387f, 0.45282787f, 0.4570233f, 0.46145523f, 0.46623212f, 0.4714906f, 0.47778928f, 0.48527372f, 0.4940327f, 0.50526524f, 0.52009726f, 0.54045635f, 0.5736745f, 1.0f};

	public final static int numOfThresholds = perlinThresholds.length;

	public static float getChance(float perlin) {
		if (perlin > 1)
			return 1f;
		if (perlin < -1)
			return 0f;
		int low = 0;
		int high = numOfThresholds - 1;

		while (low <= high) {
			final int mid = low + high >>> 1;
			final float midVal = perlinThresholds[mid];
			if (perlin == midVal || midVal < perlin && perlinThresholds[mid + 1] > perlin)
				return (mid + 1) / (float)numOfThresholds;
			if (midVal < perlin)
				low = mid + 1;
			else
				high = mid - 1;
		}
		throw new IllegalArgumentException("Can't find value");
	}
	public static float getThreshold(float percent) {
		return perlinThresholds[(int)(percent * 1000)];
	}

	public static float getThreshold(int promill) {
		return perlinThresholds[promill];
	}
}
